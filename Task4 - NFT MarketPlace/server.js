const express = require("express");
const multer = require("multer");
const axios = require("axios");
const FormData = require("form-data");
const fs = require("fs");

const app = express();
const upload = multer({ dest: __dirname + "/uploads/" });

const JWT =
  "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiI5ZTEyYzQ3YS1lNmQyLTRjYjQtYThhYy1kNzBmMjY2MDA0NjQiLCJlbWFpbCI6Imp0cmlhbDAwMDFAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsInBpbl9wb2xpY3kiOnsicmVnaW9ucyI6W3siaWQiOiJGUkExIiwiZGVzaXJlZFJlcGxpY2F0aW9uQ291bnQiOjF9LHsiaWQiOiJOWUMxIiwiZGVzaXJlZFJlcGxpY2F0aW9uQ291bnQiOjF9XSwidmVyc2lvbiI6MX0sIm1mYV9lbmFibGVkIjpmYWxzZSwic3RhdHVzIjoiQUNUSVZFIn0sImF1dGhlbnRpY2F0aW9uVHlwZSI6InNjb3BlZEtleSIsInNjb3BlZEtleUtleSI6IjlhMDJjNGU5ZjMyZGYwNmQyMWFlIiwic2NvcGVkS2V5U2VjcmV0IjoiYmUyYTM3MmFkNmEzZDI5OTU4ZWU2MjdiYWM3NGNkOTA2ZWFhODNlM2QxMzIyYzQyMGFkMDcyMThhYTdkZmYxZSIsImlhdCI6MTY4Nzg0MjcxNX0.KauNqLCLLJ2k3TiAUc0hfHNFNZaouaqUgzsMx2Zx7I8";

app.use(express.static(__dirname));
app.use(express.urlencoded({ extended: true }));

app.get("/", (req, res) => {
  res.sendFile(__dirname + "/index.html");
});

app.post("/", upload.single("file"), async (req, res) => {
  const file = req.file;
  const NFTname = req.body.NFTname;
  const NFTprice = req.body.NFTprice;
  const filePath = file.path;

  const formData = new FormData();

  const img = fs.createReadStream(filePath);
  formData.append("file", img);

  const metadata = JSON.stringify({
    name: NFTname,
    keyvalues: {
      price: NFTprice,
    },
  });
  formData.append("pinataMetadata", metadata);

  const options = JSON.stringify({
    cidVersion: 0,
  });
  formData.append("pinataOptions", options);

  try {
    const responsePinata = await axios.post(
      "https://api.pinata.cloud/pinning/pinFileToIPFS",
      formData,
      {
        maxBodyLength: "Infinity",
        headers: {
          "Content-Type": `multipart/form-data; boundary=${formData._boundary}`,
          Authorization: JWT,
        },
      }
    );
    let IPFS = responsePinata.data.IpfsHash;
    // console.log(IPFS);

    let url="https://gateway.pinata.cloud/ipfs/" + IPFS;

    const options = {
      method: "PUT",
      url: "https://staging.crossmint.com/api/2022-06-09/collections/default-solana/nfts/" + NFTname,
      headers: {
        accept: "application/json",
        "content-type": "application/json",
        "x-client-secret": "sk_test.f27d13e4.0e72f690c600c8d39b68581ee3a5aebc",
        "x-project-id": "65359ce0-fa7e-451c-b198-f280ae967e42",
      },
      data: {
        recipient: "solana:9YJTtYSkBrQjGTZK4WjC9SfpbUfrLjCzE3ntJxwobbxR",
        metadata: {
          name: NFTname,
          image:  url,
          description: 'My NFT created via the mint API!'
        },
      },
    };

    axios
      .request(options)
      .then(function (response) {
        // console.log(response.data);

        const responseData = {
          isSuccessful: true,
          url: url,
          NFTname: NFTname,
          NFTprice: NFTprice
        };
    
        res.json(responseData);
        res.send();

      })
      .catch(function (error) {
        console.error(error);
        const errorData = {
          isSuccessful: false
        };
    
        res.json(errorData);
        res.send();
      });
  } catch (error) {
    console.error(error);
    const errorData = {
      isSuccessful: false
    };

    res.json(errorData);
    res.send();
  }
});

app
  .listen(1000, () => {
    console.log("Server is running on port 1000");
  })
  .on("error", (err) => {
    console.error("Server error:", err.message);
  });
